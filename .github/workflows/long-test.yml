name: Long Test

on:
  schedule:
    - cron: "0 0 * * 1-5"
  pull_request:  # TODO remove this before merge
  workflow_dispatch:

jobs:
  scan_build:
    name: "Scan build"
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-26-06-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Run scan"
        run: |
          set -x
          mkdir build
          cd build
          ../scripts/scan-build.sh

  long-asan:
    name: Long ASAN
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-26-06-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Install deps"
        run: |
          sudo apt-get -y update
          sudo apt install ansible -y
          cd getting_started/setup_vm
          ansible-playbook ccf-extended-testing.yml

      - name: "Build"
        run: |
          git config --global --add safe.directory /__w/CCF/CCF
          mkdir build
          cd build
          cmake -GNinja -DCOMPILE_TARGET=virtual -DCMAKE_BUILD_TYPE=Debug -DLONG_TESTS=ON -DLVI_MITIGATIONS=OFF -DSAN=ON ..
          ninja

      - name: "Test"
        run: |
          set +x
          cd build
          ./tests.sh -VV --timeout 1600 --no-compress-output -LE "benchmark|perf"

  long-tsan:
    name: Long TSAN
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-26-06-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build"
        run: |
          git config --global --add safe.directory /__w/CCF/CCF
          mkdir build
          cd build
          cmake -GNinja -DCOMPILE_TARGET=virtual -DCMAKE_BUILD_TYPE=Debug -DLONG_TESTS=ON -DLVI_MITIGATIONS=OFF -DTSAN=ON -DWORKER_THREADS=2 ..
          ninja

      - name: "Test"
        run: |
          set +x
          cd build
          ./tests.sh -VV --timeout 1600 --no-compress-output -LE "benchmark|perf"
